{"version":3,"sources":["components/HeaderBar/MenuCategory.tsx","components/HeaderBar/MenuOption.tsx","hooks/useEditorState.tsx","components/HeaderBar/FileLoadModal.tsx","logic/fileOperations.ts","components/HeaderBar/HeaderBar.tsx","data/tileInfo.ts","components/BlockPalette/BlockPalette.tsx","components/LevelEditor/MobSprite.tsx","components/LevelEditor/TileGrid.tsx","components/LevelEditor/LevelEditor.tsx","components/MobSidebar/MobInfo.tsx","components/MobSidebar/MobSidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MenuCategory","props","useState","open","setOpen","className","onClick","o","onMouseLeave","name","children","MenuOption","callback","getBlankTileGrid","Array","fill","EditorStateContext","createContext","leftClickPressed","rightClickPressed","foregroundVisible","leftClickTileId","rightClickTileId","foregroundTiles","backgroundTiles","levelData","ArrayBuffer","mobs","setLeftClickPressed","b","Error","setRightClickPressed","toggleForegroundVisible","setLeftClickTileId","tileId","setRightClickTileId","setLevelData","data","setForegroundTiles","tiles","setBackgroundTiles","setMobs","placeForegroundTileAtIndex","index","placeBackgroundTileAtIndex","pickTile","useEditorState","useContext","EditorStateProvider","setForegroundVisible","bt","slice","ft","value","useMemo","fv","id","Provider","FileLoadModal","shown","onDismiss","evt","stopPropagation","onSubmit","files","currentTarget","elements","fileInput","length","onConfirm","preventDefault","type","readFile","inputFile","a","Promise","resolve","reader","FileReader","onloadend","result","readAsArrayBuffer","getBackgroundLayer","fileData","view","Uint16Array","bgoffset","background","i","push","getForegroundLayer","fgoffset","foreground","readUint8","mobData","ptr","Uint8Array","readInt32","Int32Array","readFloat32","Float32Array","readCString","nameEndPtr","byteLength","TextDecoder","decode","getMobs","numMobs","startPtr","startX","startY","flippedH","numPathCoordinates","pathCoordinates","pathX","pathY","x","y","spawnFromMob","extraDataFlag","unknown1","unknown2","rawData","startingCoordinates","HeaderBar","fileLoadModalShown","setFileLoadModalShown","fileToLoad","console","log","fileContents","tileInfo","getBlocks","map","_","xOffset","yOffset","Math","floor","description","getBlockWithIndex","BlockPalette","blocks","setBlocks","handleBlockSelection","button","useEffect","style","left","selectionClass","onContextMenu","backgroundPositionX","backgroundPositionY","MobSprite","mob","pathStartString","pathContinuationString","p","pathString","join","width","height","stroke","strokeWidth","d","bottom","src","process","transform","alt","pc","opacity","TileGrid","offset","getOffsetForTileId","onMouseDown","onTilePlaced","onTilePicked","handleMouseDown","onMouseMove","handleMouseMove","LevelEditor","backgroundColor","m","MobInfo","disabled","checked","MobSidebar","right","App","onMouseUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3ebafe3.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function MenuCategory(props: {name: string, children?: any}) {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <div\n            className=\"MenuCategory\"\n            onClick={() => setOpen(o => !o)}\n            onMouseLeave={() => setOpen(false)}\n        >\n            <span>{props.name}</span>\n            { open ? <ul>{props.children}</ul> : null }\n        </div>\n    );\n}","export default function MenuOption(props: {name: string, callback(): void}) {\n    return (\n        <li\n            onClick={ props.callback }\n        >\n            {props.name}\n        </li>\n    );\n}","import { createContext, useContext, useMemo, useState } from \"react\";\nimport Mob from \"../models/mob\";\n\nexport interface EditorState {\n    leftClickPressed: boolean;\n    rightClickPressed: boolean;\n    foregroundVisible: boolean;\n    leftClickTileId: number;\n    rightClickTileId: number;\n    foregroundTiles: Array<number>;\n    backgroundTiles: Array<number>;\n    levelData: ArrayBuffer;\n    mobs: Array<Mob>;\n    setLeftClickPressed(pressed: boolean): void;\n    setRightClickPressed(pressed: boolean): void;\n    toggleForegroundVisible(): void;\n    setLeftClickTileId(tileId: number): void;\n    setRightClickTileId(tileId: number): void;\n    setLevelData(data: ArrayBuffer): void;\n    setForegroundTiles(tiles: Array<number>): void;\n    setBackgroundTiles(tiles: Array<number>): void;\n    setMobs(mobs: Array<Mob>): void;\n    placeForegroundTileAtIndex(tileId: number, index: number): void,\n    placeBackgroundTileAtIndex(tileId: number, index: number): void,\n    pickTile(tileId: number): void,\n}\n\nfunction getEmptyEditorState(): EditorState {\n    return {\n        leftClickPressed: false,\n        rightClickPressed: false,\n        foregroundVisible: true,\n        leftClickTileId: 0,\n        rightClickTileId: 0,\n        foregroundTiles: getBlankTileGrid(),\n        backgroundTiles: getBlankTileGrid(),\n        levelData: new ArrayBuffer(0),\n        mobs: new Array<Mob>(),\n        setLeftClickPressed: (b: boolean) => { throw new Error(\"Editor State Context not found\") },\n        setRightClickPressed: (b: boolean) => { throw new Error(\"Editor State Context not found\") },\n        toggleForegroundVisible: () => { throw new Error(\"Editor State Context not found\") },\n        setLeftClickTileId: (tileId: number) => { throw new Error(\"Editor State Context not found\") },\n        setRightClickTileId: (tileId: number) => { throw new Error(\"Editor State Context not found\") },\n        setLevelData: (data: ArrayBuffer) => { throw new Error(\"Editor State Context not found\") },\n        setForegroundTiles: (tiles: Array<number>) => { throw new Error(\"Editor State Context not found\") },\n        setBackgroundTiles: (tiles: Array<number>) => { throw new Error(\"Editor State Context not found\") },\n        setMobs: (mobs: Array<Mob>) => { throw new Error(\"Editor State Context not found\") },\n        placeForegroundTileAtIndex: (tileId: number, index: number) => { throw new Error(\"Editor State Context not found\") },\n        placeBackgroundTileAtIndex: (tileId: number, index: number) => { throw new Error(\"Editor State Context not found\") },\n        pickTile: (tileId: number) => { throw new Error(\"Editor State Context not found\") },\n    }\n}\n\nfunction getBlankTileGrid(): Array<number> {\n    return Array(20 * 15).fill(0);\n}\n\nexport const EditorStateContext = createContext(getEmptyEditorState());\n\nexport default function useEditorState() {\n    return useContext(EditorStateContext);\n}\n\nexport function EditorStateProvider(props: {children: any}) {\n    const [leftClickPressed, setLeftClickPressed] = useState(false);\n    const [rightClickPressed, setRightClickPressed] = useState(false);\n    const [foregroundVisible, setForegroundVisible] = useState(true);\n    const [leftClickTileId, setLeftClickTileId] = useState(0);\n    const [rightClickTileId, setRightClickTileId] = useState(0);\n    const [backgroundTiles, setBackgroundTiles] = useState(getBlankTileGrid());\n    const [foregroundTiles, setForegroundTiles] = useState(getBlankTileGrid());\n    const [levelData, setLevelData] = useState(new ArrayBuffer(0));\n    const [mobs, setMobs] = useState([] as Array<Mob>);\n\n    function placeBackgroundTileAtIndex(index: number, tileId: number) {\n        setBackgroundTiles((bt) => {\n            return [...bt.slice(0, index), tileId, ...bt.slice(index + 1)];\n        });\n    }\n\n    function placeForegroundTileAtIndex(index: number, tileId: number) {\n        setForegroundTiles((ft) => {\n            return [...ft.slice(0, index), tileId, ...ft.slice(index + 1)];\n        });\n    }\n\n    function pickTile(tileId: number) {\n        setLeftClickTileId(tileId);\n    }\n\n    const value = useMemo(() => ({\n        leftClickPressed,\n        rightClickPressed,\n        foregroundVisible,\n        leftClickTileId,\n        rightClickTileId,\n        foregroundTiles,\n        backgroundTiles,\n        levelData,\n        mobs,\n        setLeftClickPressed,\n        setRightClickPressed,\n        toggleForegroundVisible: () => setForegroundVisible(fv => !fv),\n        setLeftClickTileId: (id: number) => setLeftClickTileId(id),\n        setRightClickTileId: (id: number) => setRightClickTileId(id),\n        setLevelData: (data: ArrayBuffer) => setLevelData(data),\n        setForegroundTiles: (tiles: Array<number>) => setForegroundTiles(tiles),\n        setBackgroundTiles: (tiles: Array<number>) => setBackgroundTiles(tiles),\n        setMobs: (mobs: Array<Mob>) => setMobs(mobs),\n        placeForegroundTileAtIndex,\n        placeBackgroundTileAtIndex,\n        pickTile,\n    }), [leftClickPressed, rightClickPressed, foregroundVisible, leftClickTileId, rightClickTileId, foregroundTiles, backgroundTiles, levelData, mobs]);\n\n    return (\n        <EditorStateContext.Provider value={value}>\n            { props.children }\n        </EditorStateContext.Provider>\n    );\n}","interface FileLoadFormElement extends HTMLFormElement {\r\n    readonly elements: FileLoadFormElements;\r\n}\r\n\r\ninterface FileLoadFormElements extends HTMLFormControlsCollection{\r\n    readonly fileInput: HTMLInputElement;\r\n}\r\n\r\nexport default function FileLoadModal(props: {shown: boolean, onDismiss(): void, onConfirm(fileToLoad: File): void}) {\r\n    if (!props.shown) {\r\n        return null;\r\n    }\r\n\r\n    function handleSubmit(evt: React.FormEvent<FileLoadFormElement>) {\r\n        const files = evt.currentTarget.elements.fileInput.files;\r\n        if (files?.length) {\r\n            props.onConfirm(files[0]);\r\n        }\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"FileLoadBackdrop\" onClick={props.onDismiss}>\r\n            <div className=\"FileLoadModal\" onClick={evt => evt.stopPropagation()}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <input name=\"fileInput\" type=\"file\" />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Load into editor</button>\r\n                        <button onClick={props.onDismiss}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Mob, { Coordinates } from \"../models/mob\";\r\n\r\nconst bgoffset = 88;\r\nconst fgoffset = 756;\r\nconst numMobsOffset = 1360;\r\n\r\nexport async function readFile(inputFile: File): Promise<ArrayBuffer> {\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader()\r\n    reader.onloadend = () => resolve(reader.result as ArrayBuffer)\r\n    reader.readAsArrayBuffer(inputFile);\r\n  });\r\n}\r\n\r\nexport function getBackgroundLayer(fileData: ArrayBuffer) {\r\n  const view = new Uint16Array(fileData.slice(bgoffset, bgoffset + 20 * 15 * 2));\r\n  let background = [];\r\n  for (var i = 0; i < 20 * 15; i++) {\r\n    background.push(view[i]);\r\n  }\r\n  return background;\r\n}\r\n\r\nexport function getForegroundLayer(fileData: ArrayBuffer) {\r\n  const view = new Uint16Array(fileData.slice(fgoffset, fgoffset + 20 * 15 * 2));\r\n  let foreground = [];\r\n  for (var i = 0; i < 20 * 15; i++) {\r\n    foreground.push(view[i]);\r\n  }\r\n  return foreground;\r\n}\r\n\r\nfunction readUint8(mobData: ArrayBuffer, ptr: number) {\r\n  return new Uint8Array(mobData.slice(ptr, ptr + 1))[0];\r\n}\r\n\r\nfunction readInt32(mobData: ArrayBuffer, ptr: number) {\r\n  return new Int32Array(mobData.slice(ptr, ptr + 4))[0];\r\n}\r\n\r\nfunction readFloat32(mobData: ArrayBuffer, ptr: number) {\r\n  return new Float32Array(mobData.slice(ptr, ptr + 4))[0];\r\n}\r\n\r\nfunction readCString(mobData: ArrayBuffer, ptr: number) {\r\n  const view = new Uint8Array(mobData);\r\n  let nameEndPtr = ptr;\r\n  while (nameEndPtr < mobData.byteLength && view[nameEndPtr] !== 0) {\r\n    nameEndPtr++;\r\n  }\r\n  return new TextDecoder().decode(new Uint8Array(mobData.slice(ptr, nameEndPtr)));\r\n}\r\n\r\nexport function getMobs(fileData: ArrayBuffer) {\r\n  let mobs = [] as Array<Mob>;\r\n  const mobData = fileData.slice(numMobsOffset);\r\n  const numMobs = readUint8(mobData, 0);\r\n  let ptr = 4;\r\n  while (mobs.length < numMobs && ptr < mobData.byteLength) {\r\n    const startPtr = ptr;\r\n    const startX = readFloat32(mobData, ptr);\r\n    ptr += 4;\r\n    const startY = readFloat32(mobData, ptr);\r\n    ptr += 4;\r\n\r\n    const flippedH = readInt32(mobData, ptr);\r\n    ptr += 4;\r\n\r\n    const name = readCString(mobData, ptr);\r\n    ptr += name.length + 1;\r\n\r\n    const numPathCoordinates = readUint8(mobData, ptr);\r\n    ptr += 4;\r\n\r\n    let pathCoordinates = [] as Array<Coordinates>;\r\n\r\n    for (let i = 0; i < numPathCoordinates; i++) {\r\n      const pathX = readFloat32(mobData, ptr);\r\n      ptr += 4;\r\n      const pathY = readFloat32(mobData, ptr);\r\n      ptr += 4;\r\n      pathCoordinates.push({ x: pathX, y: pathY });\r\n    }\r\n\r\n    // The next 4 bytes are always 0x00\r\n    ptr += 4;\r\n\r\n\r\n    // The next 4 bytes are always 0xFF\r\n    ptr += 4;\r\n\r\n    const spawnFromMob = readUint8(mobData, ptr);\r\n    ptr += 4;\r\n\r\n    const extraDataFlag = readUint8(mobData, ptr);\r\n    ptr += 4;\r\n\r\n    let unknown1 = null as number | null;\r\n    let unknown2 = null as number | null;\r\n\r\n    if (extraDataFlag & 0x01) {\r\n      unknown1 = readUint8(mobData, ptr);\r\n      ptr += 4;\r\n    }\r\n\r\n    if (extraDataFlag & 0x10) {\r\n      unknown2 = readFloat32(mobData, ptr);\r\n      ptr += 4\r\n    }\r\n\r\n    mobs.push({\r\n      id: mobs.length + 1,\r\n      rawData: new Uint8Array(mobData.slice(startPtr, ptr)),\r\n      unknown1: unknown1,\r\n      unknown2: unknown2,\r\n      startingCoordinates: { x: startX, y: startY },\r\n      flippedH: flippedH === -1,\r\n      name: name,\r\n      pathCoordinates: pathCoordinates,\r\n      spawnFromMob: spawnFromMob,\r\n    });\r\n  }\r\n  return mobs;\r\n}","import MenuCategory from \"./MenuCategory\";\nimport \"./HeaderBar.css\";\nimport MenuOption from \"./MenuOption\";\nimport useEditorState from \"../../hooks/useEditorState\";\nimport { useState } from \"react\";\nimport FileLoadModal from \"./FileLoadModal\";\nimport { getBackgroundLayer, getForegroundLayer, getMobs, readFile } from \"../../logic/fileOperations\";\n\nexport default function HeaderBar() {\n    const { toggleForegroundVisible, setLevelData, setForegroundTiles, setBackgroundTiles, setMobs } = useEditorState();\n    const [fileLoadModalShown, setFileLoadModalShown] = useState(false);\n\n    async function loadFile(fileToLoad: File) {\n        console.log(fileToLoad);\n        const fileContents = await readFile(fileToLoad);\n        setForegroundTiles(getForegroundLayer(fileContents));\n        setBackgroundTiles(getBackgroundLayer(fileContents));\n        const mobs = getMobs(fileContents);\n        console.log(mobs);\n        setMobs(mobs);\n        setLevelData(fileContents);\n        setFileLoadModalShown(false);\n    }\n\n    return <div className=\"HeaderBar\">\n        <MenuCategory name=\"file\">\n            <MenuOption name=\"New\" callback={() => console.log(\"new file\")} />\n            <MenuOption name=\"Open\" callback={() => setFileLoadModalShown(true)} />\n            <MenuOption name=\"Save\" callback={() => console.log(\"save file\")} />\n        </MenuCategory>\n        <MenuCategory name=\"edit\">\n            <MenuOption name=\"Cut\" callback={() => console.log(\"cut\")} />\n            <MenuOption name=\"Copy\" callback={() => console.log(\"copy\")} />\n            <MenuOption name=\"Paste\" callback={() => console.log(\"paste\")} />\n            </MenuCategory>\n        <MenuCategory name=\"view\">\n            <MenuOption name=\"Switch Layer\" callback={toggleForegroundVisible} />\n        </MenuCategory>\n        <FileLoadModal shown={fileLoadModalShown} onConfirm={loadFile} onDismiss={() => setFileLoadModalShown(false)}/>\n    </div>;\n}","export const tileInfo = [\n    \"Empty tile\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"A single brick\",\n    \"A decorative brick\",\n    \"Tileable floor\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"A solid on top platform\",\n    \"A single brick\",\n    \"The left edge of a block\",\n    \"The right edge of a block\",\n    \"The left edge of a block\",\n    \"The right edge of a block\",\n    \"The left edge of a block\",\n    \"The right edge of a block\",\n    \"The top edge of a block\",\n    \"The left edge of a block\",\n    \"The right edge of a block\",\n    \"A solid on top platform\",\n    \"The left edge of a block\",\n    \"The right edge of a block\",\n    \"The left edge of a block\",\n    \"The right edge of a block\",\n    \"A solid on top platform\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"????\",\n    \"????\",\n    \"????\",\n    \"????\",\n    \"The bottom edge of a block\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"The left edge of a platform\",\n    \"The middle of a platform\",\n    \"The right edge of a platform\",\n    \"A dissolving platform\",\n    \"A dissolving platform\",\n    \"A dissolving platform\",\n    \"A dissolving platform\",\n    \"A dissolving platform\",\n    \"A dissolving platform\",\n    \"????\",\n    \"????\",\n    \"Banana item\",\n    \"Grape item\",\n    \"Cherry item\",\n    \"Watermelon item\",\n    \"Peach item\",\n    \"????\",\n    \"????\"\n];","import { useEffect, useState } from \"react\";\nimport { tileInfo } from \"../../data/tileInfo\";\nimport useEditorState from \"../../hooks/useEditorState\";\nimport \"./BlockPalette.css\";\n\ninterface BlockInfo {\n    id: number;\n    xOffset: number;\n    yOffset: number;\n    description: string;\n}\n\nfunction getBlocks(): Array<BlockInfo> {\n    return Array(340).fill(0).map((_, index) => getBlockWithIndex(index));\n}\n\nfunction getBlockWithIndex(index: number) {\n    return {\n        id: index,\n        xOffset: index % 16 * -32,\n        yOffset: Math.floor(index / 16) * -32,\n        description: index < tileInfo.length ? tileInfo[index] : \"\"\n    };\n}\n\nexport default function BlockPalette() {\n    const [blocks, setBlocks] = useState([] as Array<BlockInfo>);\n    const [open, setOpen] = useState(true);\n\n    const {leftClickTileId, rightClickTileId, setLeftClickTileId, setRightClickTileId} = useEditorState();\n\n    useEffect(() => {\n        setBlocks(getBlocks());\n    }, []);\n\n    function handleBlockSelection(evt: React.MouseEvent, id: number) {\n        if (evt.button === 0) {\n            setLeftClickTileId(id);\n        } else if (evt.button === 2) {\n            setRightClickTileId(id);\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n    }\n\n    return (\n        <div\n            className=\"BlockPalette\"\n            style={{left: open ? 0 : \"-15rem\"}}\n        >\n            <ul>\n                {blocks.map(b => {\n                    let selectionClass = \"\";\n                    if (leftClickTileId === b.id) {\n                        selectionClass = \"LeftClick\";\n                        if (rightClickTileId === b.id) {\n                            selectionClass = \"LeftRightClick\"\n                        }\n                    } else if (rightClickTileId === b.id) {\n                        selectionClass = \"RightClick\";\n                    }\n                    return(\n                        <li\n                            key={b.id}\n                            className={selectionClass}\n                            onClick={ (evt) => handleBlockSelection(evt, b.id) }\n                            onContextMenu={ (evt) => handleBlockSelection(evt, b.id)}\n                        >\n                            <div\n                                className=\"BlockImage\"\n                                style={{\n                                    backgroundPositionX: `${b.xOffset}px`,\n                                    backgroundPositionY: `${b.yOffset}px`\n                                }}\n                            ></div>\n                            <div className=\"BlockDescription\">{b.description}</div>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            <div\n                className=\"CollapseBlockPalette\"\n                onClick={() => setOpen(o => !o)}\n            >{ open ? \"<\" : \">\" }</div>\n        </div>\n    );\n}","import Mob from \"../../models/mob\";\r\n\r\nexport default function MobSprite(props: { mob: Mob }) {\r\n    const { mob } = props;\r\n    const pathStartString = `M ${mob.startingCoordinates.x} ${mob.startingCoordinates.y}`;\r\n    const pathContinuationString = mob.pathCoordinates.map(p => `L ${p.x} ${p.y}`)\r\n    const pathString = [pathStartString, ...pathContinuationString].join(\" \");\r\n    return (\r\n        <>\r\n            {\r\n                pathString.length > 1 &&\r\n                <svg width=\"640\" height=\"480\" className=\"MobPath\">\r\n                    <path fill=\"none\" stroke=\"#FF00FF\" strokeWidth=\"2\" d={pathString} />\r\n                </svg>\r\n            }\r\n            <div\r\n                className=\"Mob\"\r\n                style={{\r\n                    left: mob.startingCoordinates.x,\r\n                    bottom: 480 - mob.startingCoordinates.y,\r\n                }}\r\n            >\r\n                <img\r\n                    src={`${process.env.PUBLIC_URL}/img/${mob.name}.gif`}\r\n                    style={mob.flippedH ? { transform: \"scaleX(-1)\" } : {}}\r\n                    alt={mob.name}\r\n                />\r\n            </div>\r\n            {mob.pathCoordinates.map(pc => {\r\n                return (\r\n                    <div\r\n                        className=\"Mob\"\r\n                        style={{\r\n                            opacity: 0.5,\r\n                            left: pc.x,\r\n                            bottom: 480 - pc.y,\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={`${process.env.PUBLIC_URL}/img/${mob.name}.gif`}\r\n                            style={mob.flippedH ? { transform: \"scaleX(-1)\" } : {}}\r\n                            alt={mob.name}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}","import React from \"react\";\nimport useEditorState from \"../../hooks/useEditorState\";\n\nfunction getOffsetForTileId(index: number) {\n    return {\n        xOffset: index % 16 * -32,\n        yOffset: Math.floor(index / 16) * -32\n    };\n}\n\nexport default function TileGrid(props: {\n    tiles: Array<number>,\n    onTilePlaced(index: number, button: number):void,\n    onTilePicked(tileId: number): void\n}) {\n    const {leftClickPressed, rightClickPressed, leftClickTileId, rightClickTileId, setLeftClickPressed, setRightClickPressed} = useEditorState();\n\n    function handleMouseDown(index: number, evt: React.MouseEvent) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        if (evt.button === 0) {\n            setLeftClickPressed(true);\n            setRightClickPressed(false);\n            props.onTilePlaced(index, leftClickTileId);\n        } else if (evt.button === 1) {\n            setLeftClickPressed(false);\n            setRightClickPressed(false);\n            props.onTilePicked(props.tiles[index]);\n        } else if (evt.button === 2) {\n            setLeftClickPressed(false);\n            setRightClickPressed(true);\n            props.onTilePlaced(index, rightClickTileId);\n        }\n    }\n\n    function handleMouseMove(index: number, evt: React.MouseEvent) {\n        if (leftClickPressed) {\n            props.onTilePlaced(index, leftClickTileId);\n        } else if (rightClickPressed) {\n            props.onTilePlaced(index, rightClickTileId);\n        }\n        evt.stopPropagation();\n        evt.preventDefault();\n    }\n\n    return (\n        <div\n            className=\"TileGrid\"\n        >\n            {props.tiles.map((tileId, index) => {\n                const offset = getOffsetForTileId(tileId);\n                return (\n                    <div\n                        key={index}\n                        className=\"Tile\" \n                        style={{\n                            backgroundPositionX: offset.xOffset,\n                            backgroundPositionY: offset.yOffset\n                        }}\n                        onMouseDown={(evt) => handleMouseDown(index, evt)}\n                        onMouseMove={(evt) => handleMouseMove(index, evt)}\n                    />\n                );\n            })}\n        </div>\n    );\n}","import useEditorState from \"../../hooks/useEditorState\";\nimport \"./LevelEditor.css\";\nimport MobSprite from \"./MobSprite\";\nimport TileGrid from \"./TileGrid\";\n\nexport default function LevelEditor() {\n    const {\n        foregroundVisible,\n        toggleForegroundVisible,\n        backgroundTiles,\n        foregroundTiles,\n        placeBackgroundTileAtIndex,\n        placeForegroundTileAtIndex,\n        pickTile,\n        mobs\n    } = useEditorState();\n\n    return (\n        <div className=\"LevelEditor\">\n            <div className=\"TileGridHolder\">\n                <TileGrid\n                    tiles={backgroundTiles}\n                    onTilePicked={pickTile}\n                    onTilePlaced={placeBackgroundTileAtIndex}\n                />\n                {foregroundVisible ? <TileGrid\n                    tiles={foregroundTiles}\n                    onTilePicked={pickTile}\n                    onTilePlaced={placeForegroundTileAtIndex}\n                /> : null}\n                <div\n                    className=\"LayerTab\"\n                    onClick={toggleForegroundVisible}\n                    style={{ backgroundColor: foregroundVisible ? \"#6888e8\" : \"#e09038\" }}\n                >\n                    Editing: {foregroundVisible ? \"Foreground\" : \"Background\"}\n                </div>\n                {\n                    mobs.map(m => <MobSprite key={m.id} mob={m} />)\n                }\n            </div>\n        </div>\n    );\n}","import Mob from \"../../models/mob\";\r\n\r\nexport default function MobInfo(props: { mob: Mob }) {\r\n    let { mob } = props;\r\n    return (\r\n        <li>\r\n            <div>{mob.name}</div>\r\n            <div>Starting Coordinates</div>\r\n            <div>\r\n                {mob.startingCoordinates.x}, {mob.startingCoordinates.y}\r\n            </div>\r\n            <div>Unknown1: {mob.unknown1}</div>\r\n            <div>Unknown2: {mob.unknown2}</div>\r\n            <div><input type=\"checkbox\" disabled checked={!!mob.flippedH} /> Flipped horizontally?</div>\r\n            <div>Path Coordinates</div>\r\n            <div>\r\n                {mob.pathCoordinates.map(\r\n                    pc => {\r\n                        return <div>{pc.x}, {pc.y}</div>;\r\n                    }\r\n                )}\r\n            </div>\r\n        </li>\r\n    );\r\n}","import { useState } from \"react\";\nimport useEditorState from \"../../hooks/useEditorState\";\nimport MobInfo from \"./MobInfo\";\nimport \"./MobSidebar.css\";\n\nexport default function MobSidebar() {\n    const [open, setOpen] = useState(false);\n    const { mobs } = useEditorState();\n    return (\n        <div\n            className=\"MobSidebar\"\n            style={{ right: open ? 0 : \"-15rem\" }}\n        >\n            <ul>\n                {mobs.map(m => <MobInfo key={m.id} mob={m} />)}\n            </ul>\n            <div\n                className=\"CollapseMobSidebar\"\n                onClick={() => setOpen(o => !o)}\n            >{open ? \">\" : \"<\"}</div>\n        </div>\n    );\n}","import './App.css';\nimport HeaderBar from './components/HeaderBar/HeaderBar';\nimport BlockPalette from './components/BlockPalette/BlockPalette';\nimport LevelEditor from './components/LevelEditor/LevelEditor';\nimport MobSidebar from './components/MobSidebar/MobSidebar';\nimport useEditorState from './hooks/useEditorState';\n\nfunction App() {\n  const { setLeftClickPressed, setRightClickPressed } = useEditorState()\n  return (\n    <div className=\"App\"\n      onMouseUp={ () => {\n        setLeftClickPressed(false);\n        setRightClickPressed(false);\n      } }\n\n      onContextMenu={ (evt) => {\n        evt.stopPropagation();\n        evt.preventDefault();\n      } }\n    >\n      <HeaderBar />\n      <div className=\"ContentContainer\">\n        <BlockPalette />\n        <LevelEditor />\n        <MobSidebar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { EditorStateProvider } from './hooks/useEditorState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <EditorStateProvider>\n        <App />\n    </EditorStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}